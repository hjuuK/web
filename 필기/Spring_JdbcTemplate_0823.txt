JdbcTemplate
1. 설치 및 설정
1) spring-jdbc
	- 자원 해제 : 자동
	- SQLException : 엄격한 예외, 컴파일러에서 체크되는 예외
		: 예외가 발생하든 안하든 무조건 처리
	- DataAccessException
		- SQLException -> RuntimeException 형태로 변경
		
2) tomcat-jdbc
	- 커넥션 풀
		- 미리 연결 객체를 여러개 생성해서 필요할때마다 빌려주고, 회수하는 방식
		- 반응성, 성능 향상의 효과
		
		- DBMS에서 연결이 유지 안되면 연결 종료 -> 커넥션 풀 객체의 연결 상태를 주기적으로 확인할 필요
		
2. DataSource 설정

3. JdbcTemplate을 이용한 쿼리실행
- PreparedStatement
INSERT INTO member VALUES (?, ?, ? ...)

1) query() : 데이터 목록 조회, SELECT 문		// 단일값
- List query(String sql, RowMapper rowMapper)
- List query(String sql, Object[] args, RowMapper rowMapper)
- List query(String sql, RowMapper rowMapper, Object... args)

2) T queryForObject() : 데이터 레코드 한개, 단일값 - 통계 데이터 : 합계, 평균 ...		// 목록
	- 조회된 데이터가 한개 레코드가 아니면(0개 이거나 2개 이상 경우) : 예외 발생
	- try~catch로 예외처리
	
3) update() : 데이터 변경 쿼리 - INSERT, UPDATE, DELETE / 반환값은 반영된 레코드 갯수		// 수정
- int update(String sql)
- int update(String sql, Object... args)

참고)
	쿼리 수행시 기본적으로 로그는 출력 X
	slf4j api		// 자바에서 쓰이는 로고 인터페이스 중 하나		// https://mvnrepository.com/artifact/org.slf4j/slf4j-api/2.0.7
	logback classic		// 구현체		// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic/1.4.11		// test 제거	
	
	로그 레벨
	FATAL
	ERROR
	WARN  // 경고
	INFO
	DEBUG
	TRACE
	



7. 트랜잭션 처리

SQL1
SQL2
SQL3
SQL4

COMMIT -> DB에 영구 반영

conn.setAutoCommit(flase); // 추가 공통 기능

pstmt.executeUpdate(...) // 핵심기능
pstmt.executeUpdate(...) // 핵심기능
pstmt.executeUpdate(...) // 핵심기능
pstmt.executeUpdate(...) // 핵심기능

conn.commit(); // 추가 공통 기능

conn.rollback(); // 다시 되돌리기


1) @Transactional
	- Proxy 구현(AOP)
2) Platform TransactionManager
3) DataSourceTrasactionManager


---------------
spring 의존성 추가
spring-context		// https://mvnrepository.com/artifact/org.springframework/spring-context/6.0.11
spring-jdbc				// https://mvnrepository.com/artifact/org.springframework/spring-jdbc/6.0.11			=> spring은 버전 맞추기
tomcat-jdbc				// https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jdbc/10.1.11
mysql connector/j	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j/8.0.33
lombok						// https://mvnrepository.com/artifact/org.projectlombok/lombok/1.18.28


비밀번호 해시 -> JBCrypt 	// https://central.sonatype.com/artifact/org.mindrot/jbcrypt/0.4