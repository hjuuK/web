스프링 시큐리티 
- 회원 인증(로그인), 인가(접근 통제), + 보안(CSRF)
1. 의존성 설치
2. 스프링 시큐티리 설정 
3. 회원가입 구현 
	1) UserDetails 인터페이스 : DTO		⭐⭐⭐⭐⭐
		- 아이디와 비번에 대한 설정
		- 회원 탈퇴, 회원 차단, 비밀번호 만료 설정 ... 구현 => true/false로 활용하면 됨
		
	2) UserDetailsService 인터페이스 : Service		⭐⭐⭐⭐⭐
	
	
	3) PasswordEncoder : 비번의 해시화
	
4. 시큐리티를 이용한 회원 인증(로그인) 구현 
5. 로그인 정보 가져오기
1) Principal 요청메서드에 주입
	- String getName() : 아이디
	
2) SecurityContextHolder를 통해서 가져오기
	- 요청 메서드와 같이 주입을 할 수 없는 상황에서 사용 가능
	// SecurityContextHolder.getContext().getAuthentication().getPrincipal();

3) @AuthenticationPrincipal : 요청 메서드의 주입시만 사용 가능
	-> UserDetails 구현 객체 주입

4) Authentication
	Object getPrincipal(...) : UserDetails의 구현 객체 
],
	// https://mvnrepository.com/artifact/nz.net.ultraq.thymeleaf/thymeleaf-layout-dialect/3.2.1
	// https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa/5.0.0

이미지 -> 미리캔버스, 캔바


/error 템플릿 경로 : 응답 코드.html
	- EL 변수
		- status : 응답 코드
		- path : 현재 경로
		- error 
		- message
		- timestamp : 발생한 날짜와 시간

6. thymeleaf-extras-springsecurity6
	1) xmlns:sec="http://www.thymeleaf.org/extras/spring-security"
		
	2) sec:authorize="hasAnyAuthority(...)", sec:authorize="hasAuthority(...)"
	3) sec:authorize="isAuthenticated()" : 로그인 상태 
	4) sec:authorize="isAnonymous()" : 미로그인 상태 
	
	5) csrf 토큰 설정하기 
		- ${_csrf.token}
		- ${_csrf.headerName}
	
7. 페이지 권한 설정하기 
	- AuthenticationEntryPoint 
	
8.  Spring Data JPA Auditing + Spring Security
- 로그인 사용자가 자동 DB 추가 
1) AuditorAware 인터페이스



POST 요청시 CSRF 토큰 검증 : 검증 실패시 403
- 자바 스크립트 ajax 형태로 POST 데이터를 전송할시 CSRF 토큰 검증 




const formData = new FormData();
formData.append("userId", "user03");
formData.append("userPw", "12345678");
formData.append("userNm", "사용자03");
formData.append("email", "user03@test.org");
formData.append("agree", "true");

const token = document.querySelector("[name='_csrf']").content;
const headerNm = document.querySelector("[name='_csrf_header']").content;

const xhr = new XMLHttpRequest();
xhr.open("POST", "/member/login");
xhr.setRequestHeader(headerNm, token);

xhr.send(formData);
xhr.onreadystate = function() {
    if (xhr.status == 200 && xhr.readyState == XMLHttpRequest.DONE) {
        console.log(xhr.responseText);
    }
};

xhr.onerror = function(error) {
    console.log(err);
};