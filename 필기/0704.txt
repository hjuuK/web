자바 스크립트에서 함수 객체 -> 실행 X

함수 호출 -> 번역 -> 실행 가능한 객체(EC - Execution Context) -> 스택 -> 실행 -> 종료


Window -> 브라우저 창을 하나 생성 -> window 객체 생성

Global EC(Execution Context) 객체 {
	변수 레코드 : {
		window.num1 = 5;
	}
	
	외부 레코드 참조 : null;
	
	this 바인딩 : window
}

Outer EC(Execution Context) 객체 {
	변수 레코드 {
		num2 : 10
	}
	
	외부 레코드 참조 : Global EC 변수 레코드 참조
	
	this 바인딩 : 호출한 객체
}

Inner EC(Execution Context) 객체 {
	변수 레코드 {
		num3 : 20
	}
	
	외부 레코드 참조 : outer EC의 변수 레코드 참조
	
	this의 값을 결정(this 바인딩) : 호출한 객체가 this
}


유효범위 체인 (Scope)

--------------------------------------------------------

자바스크립트 - 함수 X

함수 객체 -> 실행 X -> 평가(번역) -> EC(Execution Context - 실행 가능한 객체) -> 실행(스택)

--------------------------------------------------------

변수를 아래에다 정의해도 전부 window 객체에 추가 / 항상 소스 위쪽에 존재 -> 호이스팅

this는 함수가 호출될 때 결정(평가 후 EC가 생성될 때)
