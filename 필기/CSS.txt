CSS
HTML에서 CSS를 적용하는 방법
1. HTML 요소 속성으로써 적용하는 방법
	style 속성에다 직접 지정
	
2. CSS 적용 순서
3. 외부 파일로 적용하는 방법
	<link rel="stylesheet" type="text/css" href="스타일 파일 경로">
	
	확장자 .css

선택자
1. 선택자의 종류

1) 태그명으로 선택
	*: 모든 태그
	* { ... } : 공통 스타일

2) 클래스명으로 선택(class="") : 복수개 선택, 여러 클래스를 공백으로 띄어서 입력
	.클래스명 { ... }

3) 아이디로 선택자(id="") : 한개를 선택, 무조건 한개만 지정
	#아이디명 { ... }
	
	참고)
		스타일 속성
		
4) 조상 자손 선택자
	조상 조상 ... 자손 { ... }

5) 부모 자식 선택자
	부모 선택자 > 자식 선택자
	(바로 위) 		(바로 아래)

6) 그룹 선택자 : 공통 스타일을 여러 선택자에 적용
	선택자, 선택자, ... { ...공통 스타일... }
	
7) 가상 클래스 선택자
	- 상태를 선택
		선택자:cheked - 체크된 상태 선택
		선택자:hover - 마우스 커서가 올라온 상태
		선택자:selected - 선택된 상태
		선택자:focus - 포커스 상태
		
	- 조건, 순서로 선택
		선택자:not('제외할 선택자') 
		선택자:first-child : 첫번째 자식 선택자
		선택자:last-child : 마지막 자식 선택자
		선택자:nth-child(수치 / 수식) : 수치 : 수치만큼의 위치(1부터 시작)
														  수식 : 수식대로 계산해서 선택
															
															1,3,5,7,9 ... //2n+1
															
															2,4,6,8,10 ... //2n
															
		선택자:first-of-type: 첫번째 요소
		선택자:last-of-type : 마지막 요소
		선택자:nth-or-type : 수치, 수식

	- 가상의 요소를 추가해서 선택
		선택자:before - 자식요소 가장 앞에 추가
		선택자:after - 자식요소 가장 뒤에 추가
		
			content 속성이 없으면 노출 X, 내용이 없는 경우라도 content: '' 정의해야 한다.
	
	참고)
		속성으로 선택
		선택자[속성="값"]
		
		- 주석
		/* ... */

2. 스타일 적용 우선 순위
	많이 적용되는 범위 -> 우선순위 낮고
	적용 범위가 좁은 경우 -> 우선순위가 높다
	
	태그 선택자 < 클래스 선택자(.) < 아이디 선택자(#) < 스타일 속성
	
	우선순위가 같은 경우? 뒤에 작성한 선택자가 우선순위가 더 높음
	
	참고)
		!important -> 우선순위 강제 적용

결합자
	부모 > 자식 - 부모 : 바로 위 요소, 자식 : 바로 아래 요소
	
	선택자1 + 선택자2 : 선택자2는 선택자1의 바로 오른쪽 옆 형제
	선택자1 ~ 선택자2 : 선택자2는 선택자1의 오른쪽 모든 형제

속성
- 약 250개

1.폰트
	- font-size : 글자 크기
		절대 크기
			px : 화소 기준의 크기 (화소 1개 - 1px)
			
		상대 크기
			rem : 가장 상위 태그의 글자 크기가 기준 - 예) html { font-size: 13px; } -> 13px - 1rem
			em : 부모 태그의 글자 크기 기준
			
	- color : 글자 색상
			1) 색상명
			2) rgb(0~255,0~255,0~255)
							 R		 G 		 B
							 
				 rgb(175,222,181); 
				 
				 rgba(0~255,0~255,0~255,0~1)
				 
				 알파채널(alpha) : 투명도(0~1)
														1에 가까울수록 불투명, 0에 가까울수록 투명
				 
			3) hex code			16진수
				 => #af de b5
						 R 	G  B
						 
						#cccccc -> #ccc  * 중복되면 짧게 쓸 수 있음
						#ff0000 -> #f00
						  참고)
								투명도
								opacity: 0~1;		- 1에 가까울수록 불투명, 0에 가까울수록 투명
								
	- text-align : 좌우 가운데 정렬
								left|right|center;
								
								justify : 양쪽 정렬
								
	- line-height : 행간 - 숫자만 입력 비율
									1.2 : 20% 상하 여백
									
									30px : 30px 만큼 행간
									
	- letter-spacing : 자간 - 글자 사이 간격
	- word-spacing : 단어 사이 간격
	- font-weight : 글자의 굵기
						nomal - 기본값
						bold - 굵게
						100~900 : 폰트마다 지원범위가 다르다.
						
	- font-family : 글꼴
		선택자 { font-family: 글꼴명1 글꼴명2 ...; } // 대체 폰트
		
			font-family: '맑은 고딕', AppleGothic;

		- 시스템폰트 - OS에 설치된 기본 폰트

2.공간
	Block 레벨 요소
		- 줄개행
		- 공간을 지정할 수 있다. , 너비, 높이를 지정할 수 있다.
		- 외부여백(margin) : 모든 방향에 설정 가능, 내부 여백도 O
		예) div,p,table,form ... 
	
	Inline 레벨 요소
		- 줄개행 X
		- 공간 지정 X, 너비, 높이 설정 X
		- 외부여백(margin) : 좌우 여백만 설정 가능, 내부 여백은 모두 가능
		예) span,a,i ... 
		
	display: inline : 기본값
				 : block; 블록 형태가 아닌 선택자 -> Block 속성으로 변경
				 : inline-block; 
						- inline + block
				 : none - 감춤 처리
				 
						visibility: visible; 보임
												hidden; 영역은 그대로 차지하고 안보임 처리
				
				 : flex
		

- 여백
	외부 여백(margin)
		maring: 50px; - 상하좌우 전부 50px
		margin: 20px 50px; - 좌우 여백: 20px, 상하 여백: 50px
		margin: 20px 30px 40px;
						 상단		좌우	 하단
		margin: 20px 30px 40px 50px;
						 상단		우측	 하단		좌측
						 
		margin-left: 왼쪽 여백
		margin-right: 오른쪽 여백
		margin-top: 위쪽 여백
		margin-bottom: 아래쪽 여백
	
	내부 여백(padding)
		padding: 50px; - 상하좌우
		padding: 20px 50px; - 상하 : 20px, 좌우: 50px
		padding: 20px 30px 40px; - 상, 좌우, 하
		padding: 20px 30px 40px 50px; - 상, 우, 하, 좌
		
		padding-left: 왼쪽 내부 여백
		padding-right: 오른쪽 내부 여백
		padding-top: 위쪽 내부 여백
		padding-bottom: 아래쪽 내부 여백
		
	경계선
		border-width : 선의 두께
		border-style : 선의 스타일 solid - 직선, dotted - 점선, dashed - ---
		border-color : 선의 색상
		
		- 단축 표기법
		border: 두께 스타일 색상;
		
		border-left : 왼쪽 경계선
		border-right : 오른쪽 경계선
		border-top : 상단 경계선
		border-bottom : 하단 경계선
		
		border-radius : 경계선을 둥글게
										 px 또는 %

3.레이아웃
	box-sizing: 
						- content-box : 기본값 : 너비, 높이 기준 : 컨텐츠 내용
						- border-box : 너비, 높이 기준 : 경계선 기준
						
	position : 배치
		- static : 정적 위치 배치 (기본값)
		
		- 상대 위치 배치
		relative : 현재 요소의 위치(우측 상단)
		absolute : 문서 우측 상단, 상위 요소에 상대 배치 속성(relative, absolute, fixed)이 있으면, 기준이 상위 요소
		fixed : 현재 보이는 화면 기준
		
			top : 양수 : 위 -> 아래 / 음수 : 위 -> 위쪽
			bottom : 양수 : 아래 -> 위 / 음수 : 아래 -> 아래
			left : 양수 : 왼쪽 -> 오른쪽 / 음수 : 왼쪽 -> 왼쪽
			right : 양수 : 오른쪽 -> 왼쪽 / 음수 : 오른쪽 -> 오른쪽
			
		z-index : 층위 - 숫자 높을수록 위쪽에 배치
		
	float:
			left - 왼쪽 배치
			right - 오른쪽 배치
			
	- clear 속성 : float 적용 속성 제거 / 공간을 갖고 있는 요소만 적용 가능 (inline X)
			- clear: left;
			- clear: right;
			- clear: both;
			
	media query
	@media all and (max-width: 720px) { // 화면 720px 이하까지 적용되는 CSS 
	
	}
	
	@media all and (min-width: 720px) { // 화면 720px 이상부터 적용되는 CSS
	
	}
	
4.그래픽
	background - 배경색, 배경 이미지
		- background-color: 색상 - 1) 색상명 2) rgb(), rgba() 3) hex code #.. .. ..
		- background-image: url("이미지 경로");
		- background-repeat : repeat-x; - 좌에서 우로 이미지 반복 출력
											 : repeat-y; - 우에서 좌로 이미지 반복 출력
											 : no-repeat; - 반복 X, 이미지 1개만 출력
											 
		- background-position : 20px 100px; : 좌->우 20px, 위->아래 100px
		
														left|center|right	top|center|bottom
														  왼쪽|가운데|우측				위쪽|가운데|아래쪽
															
		background: [색상] 이미지(url) 반복 위치;		=> 단축

5.overflow
	- 컨텐츠의 내용이 영역 크기보다 클 경우
		- visible : 기본값 : 넘치더라도 보임
		- hidden : 넘치는 영역 감추기
		- scroll : 스크롤바 노출
		- auto : 스크롤바 자동 노출
		
		참고) 
			글자가 넘칠때 말 줄임표(...)
			text-overflow: ellipsis;
			- overflow: hidden 함꼐 쓰이고
			- white-spacing: wrap -> 글자가 끝에 도달하면 다음줄 개행 | nowrap -> 줄개행 X

6.transition
	- 전환효과(CSS가 적용되기전 지연시간 - 애니메이션 효과)
	- transition-duration : 전환효과 진행시간
	- transition-property : 전환효과 적용 속성
	- transition-timing-function : 애니메이션 효과(linear, ease, ease-in, ease-out, ease-in-out)
	- transition-delay : 전환효과가 발생하기 전 대기시간
	
	transition: 속성 지연시간 애니메이션효과 전환발생대기시간;  	=> 단축 // 속성, 지연시간은 필수

flexbox
	display: flex; -> 부모요소에 적용 -> 자식 요소의 배치
	
	- flex-direction : row - 기본값 : 좌 -> 우 배치
										 row-reverse - 우 -> 좌 배치
										 column - 위 -> 아래 배치
										 column-reverse - 아래 -> 위 배치
										 
	- justify-content : 좌, 우, 가운데 배치
											flex-start : 좌측 정렬
											flex-end : 우측 정렬
											center : 가운데 정렬
											
											공백에 대한 정렬
											space-between
											space-around
											space-evenly
											
	- align-items : 위, 가운데, 아래 배치
									stretch : 부모 요소의 높이에 맞춰서 자식요소를 높이를 늘려서 고정 (기본값)
									flex-start : 위쪽 정렬
									center : 가운데 정렬
									flex-end : 아래쪽 정렬
									
	- flex-wraip : nowrap - 기본값 : 모든 요소를 한 줄에 배치
								 wrap : 끝에 도달시 줄 개행
								 
	- flex-grow : 자식 요소 적용, 남아있는 여백의 비율별 배분  // 여백에 대한 균등 배분 // 정확하게 균등 배분 하려면 li{width:0;} 이 꼭 들어가야 함 // 너비를 0으로 초기화
	
			