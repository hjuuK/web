스프링 MVC
0. 의존성
	spring webmvc		// https://mvnrepository.com/artifact/org.springframework/spring-webmvc/6.0.11
	servlet-api			// https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api/6.0.0
	servlet.jsp-api	// https://mvnrepository.com/artifact/jakarta.servlet.jsp/jakarta.servlet.jsp-api/3.1.1
									// https://mvnrepository.com/artifact/jakarta.servlet.jsp.jstl/jakarta.servlet.jsp.jstl-api/3.0.0
	jstl api + 구현체	//https://mvnrepository.com/artifact/org.glassfish.web/jakarta.servlet.jsp.jstl/3.0.1
	
1. 톰캣 설정
2. 스프링 MVC 설정
WebMvcConfigurer 인터페이스
@EnableWebMvc

3. 코드 및 JSP 구현

4. 스프링 MVC 프레임워크 동작 방식
컨트롤러 빈
1) @Controller
2) Controller 인터페이스 구현체
3) HttpRequestHandler

5. WebMvcConfigurer 인터페이스와 설정


6. 정리
1) DispatcherServlet
2) HandlerMapping
3) HandlerAdapter
4) ViewREsolver

참고)
Ant 경로 패턴
** : 현재 경로와 하위 경로를 모두 포함한 모든 파일
ex) /upload/**
		/upload/1.png
		/upload/sub/2.png
		
* : 현재 경로의 모든 파일
ex) /upload/*
		/upload/1.png
		
? : 글자 1개
ex) /m?00
		-> /m100, /m200
		
---------------------------------------------

스프링 웹 MVC

1. 요청 매핑
- 스프링5에 추가된 애노테이션
@GetMapping
@PostMapping
@PutMapping
@PatchMapping
@DeleteMapping

- 스프링4 이전부터 사용된 애노테이션
@RequestMapping : method 속성을 설정 X -> 모든 요청 메서드에 매핑 / 공통 URL을 설정할 때 주로 사용


HttpServletRequest
	String getParameter(String name)
	
- 요청 메서드 : 요청 파라미터와 동일한 명칭의 변수명 : 자동 주입
	명칭이 다르면 ? 주입 X 	=> 이를 해결하기 위해 나온 것이 @RequestParam
	
- @RequestParam : 요청 파라미터와 다른 명칭의 변수에 값을 주입

2. 커맨드 객체
	- getter, setter 형태의 객체
	
	JSP : 속성을 관리하는 객체 4가지
	1. PageContext pageContext
	2. HttpServletRequest request
	3. HttpSession session
	4. ServletContext application
			setAttribute(String name, Object value)
			
	-> EL 속성으로 자동 추가 : 클래스명에서 앞글자만 소문자인 속성명으로 추가

3. 커맨드 객체 : 중첩·콜렉션 프로퍼티
	하나의 파라미터에 여러개의 데이터 매핑 : 배열 또는 컬렉션(Collection - List, Set(중복제거))

4. 리다이렉트
5. 컨트롤러 구현 없는 경로 매핑
6. 폼 태그
1) <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
2) <form:form>
	- modelAttribute : 커맨드 객체의 이름(EL식 속성 이름)
	- 커맨드 객체의 이름이 command이면 생략 가능
	- @ModelAttribute : -> 커맨드 객체의 EL식 속성명을 변경할 수 있음
3) <input> 관련 커스텀 태그
	- <form:input>  / type='text' / path="요청 파라미터 명 / 커맨드 객체의 속성 명"
	- <form:password>
	- <form:hidden>
4) <select> 관련 커스텀 태그
	- <form:select>
		- path, items
	- <form:options>
		- items,itemLabel, itemValue
	- <form:option>
		- value, label
5) 체크박스 관련 커스텀 태그
	- <form:checkboxes>
		- path, items. itemLabel, itemValue
		- items : 배열, 컬렉션 형태
	- <form:checkbox>
		- label, value
6) 라디오 버튼 관련 커스텀 태그
	- <form:radiobuttons>
	- <form:radiobutton>
7) <form:textarea>

8) CSS 및 HTML 태그와 관련된 공통 속성
	- cssClass : HTML의 class 속성값
	- cssErrorClass : 폼 검증 에러가 발생했을 때 사용할 HTML의 class 속성값
	- cssStyle : HTML의 style 속성값
	
	- id, title, dir
	- disabled, tabindex
	- fonfocus, onblur, onchange onclick, ondblclick
	- onkeydown, onkeypress, onkeyup
	- onmousedown, onmousemove, onmouseup
	- onmouseout, onmouseover
	
	- htmlEscape
	
7. 모델
	Model
		.addAttribute(String name, Object value)
		.addAllAttribute(Map ...)
		
	-> 요청 메서드로 정의 : 주입
	

요청 메서드에 자동 주입
1) 커맨드 객체 : 요청 데이터가 전부 다 주입
2) Model
3) Errors : 커맨드 객체의 검증 실패(유효성 검사)시 에러데 대한 정보가 담겨 있는 객체

서블릿 기본 객체 : 스프링 컨테이너에 관리 객체로 추가 : 요청 메서드의 주입, 의존성 자동 주입(@Autowired)
4) HttpServletRequest
5) HttpServletResponse
6) HttpSession