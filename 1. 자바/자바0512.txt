가장 효율적인 정수 자료형 -> int

가장 효율적인 실수 자료형 -> double


자료형
- 기본자료형

- 참조자료형


형변환
- 묵시적 형변환 (자동 형변환)
작은 자료형 -> 큰 자료형(byte -> int)

정수 -> 실수(long, int -> double)
(덜 정밀) -> (더 정밀)

- 명시적 형변환 (강제 형변환)
큰 자료형 -> 작은 자료형 : 명시적으로 형변환 의사 표현
ex) int -> byte => (byte)num1

실수 -> 정수
3.14 -> 3


연산자 -> 교재 80p

1. 항과 연산자
10 + 20 
항 : 연산에 사용되는 값
	- 단항(값이 1개)
	- 이항(값이 2개)
	- 삼항...
연산자 : 연산에 사용되는 기호

2. 대입 연산자(=)
- =
int num1 = 10;  (저장의 의미)
연산의 우선순위가 가장 낮은 연산자
- 오른쪽 연산의 결과가 가장 마지막에 대입

3. 부호 연산자 (단항 연산)
(+, -)
- : 부호 반전  // 음수 -> 양수, 양수 -> 음수

4. 산술 연산자
+, -, *, /, %
우선순위 : *,/,% -> +,-
(...) : 연산자의 우선순위를 강제로 조정
% -> 균등 배분

연산중에 자동형변환 발생
작은 자료형 -> 큰 자료형
정수 -> 실수

5. 증가감소 연산자(단항 연산)
++ (1씩 증가)
변수++ // num++ => num = num + 1;
++num; // num = num + 1;
-- (1씩 감소)
num--; // num = num - 1;
--num; // num = num - 1;

6. 관계 연산자(비교 연산자)
>, <, >=, <=
==
!=
- 연산의 결과 : 참(true), 거짓(false) (논리값 - boolean)

7. 논리 연산자
  AND 연산 : 교집합 - &&
	참, 참 -> 참
  OR 연산 : 합집합 - ||
	참, 거짓 -> 참
	거짓, 참 -> 참
	참, 참 -> 참
  NOT 연산 : 부정 - !
- 연산의 결과 : 논리값(boolean - true, false)

8. 복합 대입 연산자



//최종정리

자동형변화(묵시적형변환)

작은 자료형 -> 큰 자료형
byte -> short -> int -> long        -> float -> double
           char  ->  int

정수 -> 실수
